{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/gaurds/is-logged-in.guard.ts","./src/app/services/app-update.service.ts","./src/app/services/auth.service.ts","./src/environments/environment.ts","./src/environments/firebase.config.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IsLoggedInGuard } from './gaurds/is-logged-in.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(mod => mod.AuthModule)\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin/admin.module').then(mod => mod.AdminModule),\n    canActivate: [IsLoggedInGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { SubSink } from 'subsink';\nimport { AppUpdateService } from './services/app-update.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  private subsink = new SubSink();\n\n  constructor(\n    private auth: AngularFireAuth,\n    private router: Router,\n    private appUpdate: AppUpdateService\n  ) {}\n\n  async ngOnInit() {\n    this.subsink.sink = this.auth.user.subscribe(user => {\n      if (!user) {\n        this.router.navigate(['/auth']);\n      } else {\n        this.router.navigate(['/admin']);\n      }\n    })\n\n    this.appUpdate.checkForUpdates();\n  }\n\n  ngOnDestroy(): void {\n    this.subsink.unsubscribe();\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from 'src/environments/environment';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoggedInGuard implements CanActivate {\n\n  constructor(private authService: AuthService) {}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.authService.getUser() ? true : false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppUpdateService {\n\n  constructor(private updates: SwUpdate) {  }\n\n  checkForUpdates() {\n    this.updates.available.subscribe((event) => {\n      this.showAppUpdateAlert();\n    });\n  }\n\n  private showAppUpdateAlert() {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-primary rounded-pill',\n        cancelButton: 'btn btn-default rounded-pill',\n      },\n      buttonsStyling: false,\n    });\n\n    swalWithBootstrapButtons\n      .fire({\n        title: 'Hi',\n        text: 'An app upgrade is available',\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Update!',\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          this.doAppUpdate();\n        }\n      });\n  }\n\n  private async doAppUpdate() {\n    await this.updates.activateUpdate();\n    window.location.reload();\n  }\n}\n","import { Injectable} from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport firebase from 'firebase/app';\nimport { Subject } from 'rxjs';\nimport { SubSink } from 'subsink';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private localKey = 'pmAU';\n  private subsink = new SubSink();\n\n  private user: firebase.User | null;\n  userSub: Subject<firebase.User | null> = new Subject();\n\n  constructor(\n    private auth: AngularFireAuth,\n    private router: Router\n  ) {\n    const user = this.getUserFromLocalStorage();\n    if (user) {\n      this.updateCurrentUser(user, false);\n    }\n    this.subsink.sink = this.auth.user.subscribe(user => {\n      this.updateCurrentUser(user);\n\n      if (!user && this.user) {\n        Swal.fire('Info', 'You have been logged out. Please login again to continue', 'info');\n        this.router.navigate(['/']);\n      }\n    })\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  doLogin(provider: string) {\n    if (provider === 'google') {\n      this.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    } else if (provider === 'microsoft') {\n      this.auth.signInWithPopup(new firebase.auth.OAuthProvider('microsoft.com'))\n    }\n  }\n\n  doLogout() {\n    this.auth.signOut();\n    this.clearUserFromLocalStorage();\n  }\n\n  private updateCurrentUser(user: firebase.User | null, updateLocalStorage = true) {\n    this.user = user;\n    this.userSub.next(user);\n\n    if (updateLocalStorage) {\n      this.saveUserToLocalStorage(user);\n    }\n  }\n\n  private clearUserFromLocalStorage() {\n    localStorage.removeItem(this.localKey);\n  }\n\n  private saveUserToLocalStorage(user: firebase.User) {\n    if (user) {\n      localStorage.setItem(this.localKey, JSON.stringify(user));\n    }\n  }\n\n  private getUserFromLocalStorage(): firebase.User | null {\n    const userString = localStorage.getItem(this.localKey);\n    if (!userString) {\n      return null;\n    }\n    const user: firebase.User = JSON.parse(userString);\n    return user;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { firebaseConfig } from \"./firebase.config\";\n\nexport const environment = {\n  production: false,\n  appName: 'PassKeep',\n  firebaseConfig: firebaseConfig\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyDsYqEelZYwbkmCR7oXeOfnsvwDYcydTBM\",\r\n  authDomain: \"password-manager-34d97.firebaseapp.com\",\r\n  projectId: \"password-manager-34d97\",\r\n  storageBucket: \"password-manager-34d97.appspot.com\",\r\n  messagingSenderId: \"316910393536\",\r\n  appId: \"1:316910393536:web:98308f6c76aa1276fb7525\"\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}